{
  "openapi": "3.0.3",
  "info": {
    "title": "Freedemy",
    "version": "2.0.0",
    "description": "To use the API you must first sign-in using the `POST /auth/login` endpoint and collect the **Bearer token** from the response.\n"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/marisa/schedule": {
      "post": {
        "summary": "Create new Playlist",
        "tags": ["Create new Playlist"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "loop"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array"
                  },
                  "loop": {
                    "type": "boolean"
                  },
                  "events": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created playlist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "429": {
            "description": "Too Many Requests."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "GenericModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      }
    }
  }
}